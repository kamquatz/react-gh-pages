{"version":3,"sources":["NavBar.js","Lists.js","CheckBoxes.js","InlineStyles.js","Cards.js","State.js","TodoItem.js","Todo.js","Counter.js","MainContent.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","Toggle","aria-controls","Collapse","className","Nav_default","Link","NavDropdown_default","title","id","Item","Divider","Component","Lists","CheckBoxes","type","InlineStyles","timeOfDay","hours","Date","getHours","styles","fontSize","color","style","Cards","Card_default","Header","Body","Title","Text","Button_default","State","_this","state","name","age","isLoggedIn","text","TodoItem","props","checked","item","completed","Todo","todos","todoItems","map","src_TodoItem","key","Counter","count","add","bind","assertThisInitialized","subtract","halve","double","setState","prevState","class","onClick","React","MainContent","doubled","number","src_Counter","src_Todo","src_State","src_Cards","src_InlineStyles","src_Lists","src_CheckBoxes","Footer","sticky","target","rel","App","Fragment","src_NavBar","src_MainContent","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2OAgCeA,cA3BX,SAAAA,IAAc,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,6EAKV,OACII,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,GAAG,OAAOC,QAAQ,QACtBL,EAAAC,EAAAC,cAACC,EAAAF,EAAOK,MAAR,CAAcC,KAAK,SAAnB,aACAP,EAAAC,EAAAC,cAACC,EAAAF,EAAOO,OAAR,CAAeC,gBAAc,qBAC7BT,EAAAC,EAAAC,cAACC,EAAAF,EAAOS,SAAR,CAAiBC,UAAU,uBACvBX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACID,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUN,KAAK,SAAf,QACAP,EAAAC,EAAAC,cAACU,EAAAX,EAAIY,KAAL,CAAUN,KAAK,SAAf,QACAP,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAac,MAAM,WAAWC,GAAG,sBAC7BhB,EAAAC,EAAAC,cAACY,EAAAb,EAAYgB,KAAb,CAAkBV,KAAK,eAAvB,UACAP,EAAAC,EAAAC,cAACY,EAAAb,EAAYgB,KAAb,CAAkBV,KAAK,eAAvB,kBACAP,EAAAC,EAAAC,cAACY,EAAAb,EAAYgB,KAAb,CAAkBV,KAAK,eAAvB,aACAP,EAAAC,EAAAC,cAACY,EAAAb,EAAYiB,QAAb,MACAlB,EAAAC,EAAAC,cAACY,EAAAb,EAAYgB,KAAb,CAAkBV,KAAK,eAAvB,6BAnBPY,aCgBNC,MAlBf,WACI,OACIpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,4BCODmB,cAjBX,SAAAA,IAAc,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,GAAA3B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,6EAKV,OACII,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,aAFhB,gBAE0CtB,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,aAHhB,kBAG4CtB,EAAAC,EAAAC,cAAA,WACxCF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,aAJhB,oBAI8CtB,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,aALhB,oBAK8CtB,EAAAC,EAAAC,cAAA,mBAZjCiB,aC6BVI,MA7Bf,WACI,IAIIC,EADEC,GADO,IAAIC,MACEC,WAEbC,EAAS,CACXC,SAAU,IAad,OAVMJ,EAAQ,IACVD,EAAY,UACZI,EAAOE,MAAQ,WACNL,GAAS,IAAMA,EAAQ,IAChCD,EAAY,YACZI,EAAOE,MAAQ,YAEfN,EAAY,QACZI,EAAOE,MAAQ,WAGf9B,EAAAC,EAAAC,cAAA,OAAK6B,MAAOH,GACR5B,EAAAC,EAAAC,cAAA,2BADJ,cApBc,OAoBd,IAnBa,MAmBb,IAEsCF,EAAAC,EAAAC,cAAA,WAFtC,QAGUsB,EAHV,wCCEOQ,cApBX,SAAAA,IAAc,OAAAtC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,GAAAtC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,6EAKV,OACQI,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACID,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAKiC,OAAN,qBACAlC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAKkC,KAAN,KACInC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAKmC,MAAN,gCACApC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAKoC,KAAN,+EAGArC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAQI,QAAQ,WAAhB,yBAdJc,aCmBLoB,cArBX,SAAAA,IAAc,IAAAC,EAAA,OAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACVC,EAAA9C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,QACK6C,MAAQ,CACTC,KAAM,QACNC,IAAK,GACLC,YAAe,GALTJ,wEAUV,IAAIK,EAAOjD,KAAK6C,MAAMG,WAAa,KAAO,MAC1C,OACI5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKN,KAAK6C,MAAMC,MAChB1C,EAAAC,EAAAC,cAAA,UAAKN,KAAK6C,MAAME,IAAhB,cACA3C,EAAAC,EAAAC,cAAA,sCAA8B2C,WAhB1B1B,aCQL2B,MARf,SAAkBC,GACd,OACI/C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACXX,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,WAAW0B,QAASD,EAAME,KAAKC,YAD/C,IAC6DH,EAAME,KAAKJ,OC4CjEM,cA7CX,SAAAA,IAAc,IAAAX,EAAA,OAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACVX,EAAA9C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,QACK6C,MAAQ,CACTW,MAAO,CACH,CACIpC,GAAI,EACJ6B,KAAM,qBACNK,WAAW,GAEf,CACIlC,GAAI,EACJ6B,KAAM,mBACNK,WAAW,GAEf,CACIlC,GAAI,EACJ6B,KAAM,mBACNK,WAAW,GAEf,CACIlC,GAAI,EACJ6B,KAAM,WACNK,WAAW,GAEf,CACIlC,GAAI,EACJ6B,KAAM,mCACNK,WAAW,KA3BbV,wEAkCV,IAAMa,EAAYzD,KAAK6C,MAAMW,MAAME,IAAI,SAAAL,GAAI,OAAIjD,EAAAC,EAAAC,cAACqD,EAAD,CAAUC,IAAKP,EAAKjC,GAAIiC,KAAMA,MAE7E,OACIjD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACCmD,UAxCElC,qBC6DJsC,cA7DX,SAAAA,IAAc,IAAAjB,EAAA,OAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACVjB,EAAA9C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,QACK6C,MAAQ,CACTiB,MAAO,GAEXlB,EAAKmB,IAAMnB,EAAKmB,IAAIC,KAATlE,OAAAmE,EAAA,EAAAnE,CAAA8C,IACXA,EAAKsB,SAAWtB,EAAKsB,SAASF,KAAdlE,OAAAmE,EAAA,EAAAnE,CAAA8C,IAChBA,EAAKuB,MAAQvB,EAAKuB,MAAMH,KAAXlE,OAAAmE,EAAA,EAAAnE,CAAA8C,IACbA,EAAKwB,OAASxB,EAAKwB,OAAOJ,KAAZlE,OAAAmE,EAAA,EAAAnE,CAAA8C,IARJA,qEAYV5C,KAAKqE,SAAS,SAAAC,GACV,MAAO,CACHR,MAAOQ,EAAUR,MAAQ,wCAMjC9D,KAAKqE,SAAS,SAAAC,GACV,MAAO,CACHR,MAAOQ,EAAUR,MAAQ,qCAMjC9D,KAAKqE,SAAS,SAAAC,GACV,MAAO,CACHR,MAAOQ,EAAUR,MAAQ,sCAMjC9D,KAAKqE,SAAS,SAAAC,GACV,MAAO,CACHR,MAAyB,EAAlBQ,EAAUR,0CAMzB,OACI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,UAAQiE,MAAM,kBAAkBC,QAASxE,KAAKmE,OAA9C,SACC,OACD/D,EAAAC,EAAAC,cAAA,UAAQiE,MAAM,iBAAiBC,QAASxE,KAAKkE,UAA7C,UACA9D,EAAAC,EAAAC,cAAA,gBAAQN,KAAK6C,MAAMiB,MAAnB,KACA1D,EAAAC,EAAAC,cAAA,UAAQiE,MAAM,kBAAkBC,QAASxE,KAAK+D,KAA9C,SACC,OACD3D,EAAAC,EAAAC,cAAA,UAAQiE,MAAM,kBAAkBC,QAASxE,KAAKoE,QAA9C,kBAvDEK,IAAMlD,WCgCbmD,cAvBX,SAAAA,IAAc,OAAA5E,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,GAAA5E,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,6EAKV,IACM2E,EADU,CAAC,EAAG,EAAG,EAAG,EAAG,GACLjB,IAAI,SAACkB,GAAD,OAAqB,EAATA,IAExC,OACIxE,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBACZX,EAAAC,EAAAC,cAAA,8DAAsDqE,EAAtD,KACAvE,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,MACA1E,EAAAC,EAAAC,cAACyE,EAAD,MACA3E,EAAAC,EAAAC,cAAC0E,EAAD,MACA5E,EAAAC,EAAAC,cAAC2E,EAAD,MACA7E,EAAAC,EAAAC,cAAC4E,EAAD,MACA9E,EAAAC,EAAAC,cAAC6E,EAAD,cAlBU5D,aCYX6D,cAlBX,SAAAA,IAAc,OAAAtF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,GAAAtF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAjF,KAAAH,6EAKV,OACII,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAASG,GAAG,OAAO6E,OAAO,UACtBjF,EAAAC,EAAAC,cAACC,EAAAF,EAAOS,SAAR,CAAiBC,UAAU,uBACvBX,EAAAC,EAAAC,cAAA,SAAOiE,MAAM,yBAAb,uBACwBnE,EAAAC,EAAAC,cAAA,KAAGK,KAAK,yBAAyB2E,OAAO,SAASC,IAAI,uBAArD,+BAVvBhE,aCiBNiE,cAdX,SAAAA,IAAc,OAAA1F,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GAAA1F,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,6EAIV,OACII,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoF,SAAA,KACIrF,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAACsF,EAAD,cATErE,aCOEsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2d57ad5d.chunk.js","sourcesContent":["import React,{Component} from \"react\"\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nclass NavBar extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">mobiclick</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav>\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\n                        <Nav.Link href=\"#link\">Link</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            )\n    }\n}\n\nexport default NavBar","import React from \"react\"\n\nfunction Lists() {\n    return (\n        <div>\n            <h2>Ordered and Unordered Lists</h2>\n            <ol>\n                <li>Ordered 1</li>\n                <li>Ordered 2</li>\n                <li>Ordered 3</li>\n            </ol>\n            <ul>\n                <li>Unordered 1</li>\n                <li>Unordered 2</li>\n                <li>Unordered 3</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Lists","\nimport React,{Component} from \"react\"\n\nclass CheckBoxes extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Check Boxes</h2>\n                <input type=\"checkbox\" /> Learn React <br />\n                <input type=\"checkbox\" /> Install React <br />\n                <input type=\"checkbox\" /> Start React App <br />\n                <input type=\"checkbox\" /> Build React App <br />\n            </div>\n        )\n    }\n}\n\nexport default CheckBoxes","\nimport React from \"react\"\n\nfunction InlineStyles() {\n    const firstName = \"John\"\n    const lastName = \"Doe\"\n    const date = new Date()\n    const hours = date.getHours()\n    let timeOfDay\n    const styles = {\n        fontSize: 18\n      }\n      \n      if (hours < 12) {\n        timeOfDay = \"morning\"\n        styles.color = \"#04756F\"\n      } else if (hours >= 12 && hours < 17) {\n        timeOfDay = \"afternoon\"\n        styles.color = \"#8914A3\"\n      } else {\n        timeOfDay = \"night\"\n        styles.color = \"#D90000\"\n      }\n    return (\n        <div style={styles}>\n            <h2>Inline Styles</h2>\n            My name is {firstName} {lastName} <br />\n            Good {timeOfDay}.\n        </div>\n    )\n}\n\nexport default InlineStyles","\nimport React,{Component} from \"react\"\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nclass Cards extends Component{ \n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n                <Card>\n                    <Card.Header>Card Example</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                        With supporting text below as a natural lead-in to additional content.\n                        </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                    </Card.Body>\n                </Card>\n        )\n    }\n}\n\nexport default Cards","import React, {Component} from \"react\"\n\nclass State extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name: \"Sally\",\n            age: 13,\n            \"isLoggedIn\" : true\n        }\n    }\n    \n    render() {\n        let text = this.state.isLoggedIn ? \"in\" : \"out\"\n        return (\n            <div>\n                <h1>{this.state.name}</h1>\n                <h3>{this.state.age} years old</h3>\n                <h4>You are currently logged {text}</h4>\n            </div>\n        )    \n    }\n}\n\nexport default State\n","import React from \"react\"\n\nfunction TodoItem(props) {\n    return (\n        <div className=\"todo-item\">\n            <input type=\"checkbox\" checked={props.item.completed}/> {props.item.text}\n        </div>\n    )\n}\n\nexport default TodoItem","import React,{Component} from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nclass Todo extends Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: [\n                {\n                    id: 1,\n                    text: \"Take out the trash\",\n                    completed: true\n                },\n                {\n                    id: 2,\n                    text: \"Grocery shopping\",\n                    completed: false\n                },\n                {\n                    id: 3,\n                    text: \"Clean gecko tank\",\n                    completed: false\n                },\n                {\n                    id: 4,\n                    text: \"Mow lawn\",\n                    completed: true\n                },\n                {\n                    id: 5,\n                    text: \"Catch up on Arrested Development\",\n                    completed: false\n                }\n            ]\n        }\n    }\n    \n    render() {\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}/>)\n\n        return (\n            <div>\n                <h2>To do List</h2>\n                {todoItems}\n            </div>\n        )    \n    }\n}\n\nexport default Todo","import React from \"react\"\n\nclass Counter extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            count: 0\n        }\n        this.add = this.add.bind(this)\n        this.subtract = this.subtract.bind(this)\n        this.halve = this.halve.bind(this)\n        this.double = this.double.bind(this)\n    }\n    \n    add() {\n        this.setState(prevState => {\n            return {\n                count: prevState.count + 1\n            }\n        })\n    }\n\n    subtract() {\n        this.setState(prevState => {\n            return {\n                count: prevState.count - 1\n            }\n        })\n    }\n\n    halve() {\n        this.setState(prevState => {\n            return {\n                count: prevState.count / 2\n            }\n        })\n    }\n\n    double() {\n        this.setState(prevState => {\n            return {\n                count: prevState.count * 2\n            }\n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <h2>Modifying State</h2>\n                \n                    <button class=\"btn btn-primary\" onClick={this.halve}>Halve</button>\n                    {'\\t\\t'}\n                    <button class=\"btn btn-danger\" onClick={this.subtract}>Less 1</button>\n                    <span> {this.state.count} </span>\n                    <button class=\"btn btn-success\" onClick={this.add}>Add 1</button>\n                    {'\\t\\t'}\n                    <button class=\"btn btn-warning\" onClick={this.double}>Double</button>\n                \n            </div>\n        )\n    }\n}\n\nexport default Counter\n","\nimport React,{Component} from \"react\"\nimport Lists from \"./Lists\";\nimport CheckBoxes from \"./CheckBoxes\";\nimport InlineStyles from \"./InlineStyles\";\nimport Cards from \"./Cards\";\nimport State from \"./State\";\nimport Todo from \"./Todo\";\nimport Counter from \"./Counter\";\n\nclass MainContent extends Component{\n    constructor(){\n        super()\n    }\n\n    render() {\n        const numbers = [1, 2, 3, 4, 5];\n        const doubled = numbers.map((number) => number * 2);\n\n        return (\n            <main className=\"main-content\">\n                <h4>This is where most of my main content will go... {doubled} </h4>\n                <Counter />\n                <Todo />\n                <State />\n                <Cards />\n                <InlineStyles />\n                <Lists />\n                <CheckBoxes />\n            </main>\n        )\n    }\n}\n\nexport default MainContent","import React,{Component} from \"react\"\nimport Navbar from 'react-bootstrap/Navbar'\n\nclass Footer extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n            <Navbar  bg=\"dark\" sticky=\"bottom\">\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <small class=\"pull-right text-white\">\n                        Website Designed by <a href=\"http://mobiclick.co.nf\" target=\"_blank\" rel=\"noopener noreferrer\" >MobiClick Systems</a>\n                    </small>\n                </Navbar.Collapse>\n            </Navbar>\n        \n        )\n    }\n}\n\nexport default Footer","import React,{Component} from \"react\"\nimport NavBar from \"./NavBar\";\nimport MainContent from \"./MainContent\";\nimport Footer from \"./Footer\"\n\nclass App extends Component{\n    constructor(){\n        super()\n    }\n    render(){\n        return (\n            <> \n                <NavBar />\n                <MainContent />\n                <Footer />\n            </>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}